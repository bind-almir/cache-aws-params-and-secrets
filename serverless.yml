
service: cache-aws-params-and-secrets
frameworkVersion: '3'
provider:
  name: aws
  architecture: x86_64
  runtime: nodejs20.x
  stage: dev
  region: us-east-1
  environment:
    SECRET_NAME: 'Sample/Production/DB/Connection'
    PARAMETER_NAME: '/Sample/Production/DB/Connection'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParametersByPath
            - ssm:GetParameters
            - ssm:GetParameter
          Resource: 
            - "arn:aws:ssm:${aws:region}:${aws:accountId}:parameter${self:provider.environment.PARAMETER_NAME}"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
            - secretsmanager:ListSecrets
          Resource: 
            - "arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:${self:provider.environment.SECRET_NAME}*/*"
            - "arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:${self:provider.environment.SECRET_NAME}*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:*:*:*

functions:
  cache-aws-params-and-secrets:
    handler: index.handler
    environment:
      PARAMETERS_SECRETS_EXTENSION_CACHE_ENABLED: true
      PARAMETERS_SECRETS_EXTENSION_CACHE_SIZE: 1000
      PARAMETERS_SECRETS_EXTENSION_HTTP_PORT: 2773
      PARAMETERS_SECRETS_EXTENSION_LOG_LEVEL: 'info'
      PARAMETERS_SECRETS_EXTENSION_MAX_CONNECTIONS: 3
      SECRETS_MANAGER_TIMEOUT_MILLIS: 3000
      SECRETS_MANAGER_TTL: 300
      SSM_PARAMETER_STORE_TIMEOUT_MILLIS: 3000
      SSM_PARAMETER_STORE_TTL: 300
    layers:
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:12
    events:
      - httpApi:
          path: /
          method: get

resources:
  Resources: 
    TopSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: ${self:provider.environment.SECRET_NAME}
        Description: "Database connection string"
        GenerateSecretString:
          SecretStringTemplate: '{"username":"admin"}'
          GenerateStringKey: "password"
          PasswordLength: 16
          ExcludeCharacters: '"@/\'
        

    ParametersStore:
      Type: AWS::SSM::Parameter
      Properties:
        Name: ${self:provider.environment.PARAMETER_NAME}
        Description: "Database connection string"
        Type: String
        DataType: text
        Value: "{\"type\":\"param\",\"name\":\"do it\"}"